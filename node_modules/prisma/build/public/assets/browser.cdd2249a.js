import{B as t}from"../index.js";import"./vendor.c4d0f081.js";class s{constructor(t=`${window.location.origin}/api`){this.requestIdCounter=0,this.baseUrl=t}request(s){const r=new URL(this.baseUrl);return r.search=window.location.search,new Promise(((e,n)=>{const i=this.requestIdCounter;var o;fetch(r.toString(),{method:"POST",headers:{"Content-Type":"application/json"},body:(o={requestId:i,channel:s.channel,action:s.action,payload:s.payload},JSON.stringify(o,((s,r)=>"bigint"==typeof r?"PrismaBigInt::"+r:"Buffer"===(null==r?void 0:r.type)&&Array.isArray(null==r?void 0:r.data)?"PrismaBytes::"+t.from(r.data).toString("base64"):r)))}).then((async t=>{if(200===t.status){const s=function(t){return JSON.parse(t,((t,s)=>"string"==typeof s&&s.startsWith("PrismaBigInt::")?BigInt(s.substr("PrismaBigInt::".length)):"string"==typeof s&&s.startsWith("PrismaBytes::")?s.substr("PrismaBytes::".length):s))}(await t.text());return e(s.payload)}return console.error("Non-200 Status Code in HTTPTransport.send. Body:",t.body),n({message:"Error in HTTP Request",status:t.status,body:t.body})})).catch((()=>n({message:"Unable to communicate with Prisma Client. Is Studio still running? You may need to restart it using `npx prisma studio`",status:null,body:null}))),this.requestIdCounter++}))}}export{s as HTTPBrowserTransport};
