{"version":3,"file":"umd.js","sources":["../../src/common.ts","../../src/legacy.ts","../../src/new.ts","../../src/LazyGetter.ts"],"sourcesContent":["import {ResultSelectorFn} from './LazyGetter';\n\n/** @internal */\nexport function defaultFilter(): boolean {\n  return true;\n}\n\n/** @internal */\nexport function validateAndExtractMethodFromDescriptor(desc: PropertyDescriptor): Function {\n  const originalMethod = <Function>desc.get;\n\n  if (!originalMethod) {\n    throw new Error('@LazyGetter can only decorate getters!');\n  } else if (!desc.configurable) {\n    throw new Error('@LazyGetter target must be configurable');\n  }\n\n  return originalMethod;\n}\n\n/** @internal */\nexport function getterCommon(target: any, //tslint:disable-line:parameters-max-number\n                             key: PropertyKey,\n                             isStatic: boolean,\n                             enumerable: boolean,\n                             originalMethod: Function,\n                             thisArg: any,\n                             args: IArguments,\n                             setProto: boolean | undefined,\n                             makeNonConfigurable: boolean | undefined,\n                             resultSelector: ResultSelectorFn): any {\n  const value = originalMethod.apply(thisArg, <any>args);\n\n  if (resultSelector(value)) {\n    const newDescriptor: PropertyDescriptor = {\n      configurable: !makeNonConfigurable,\n      enumerable,\n      value\n    };\n\n    if (isStatic || setProto) {\n      Object.defineProperty(target, key, newDescriptor);\n    }\n\n    if (!isStatic) {\n      Object.defineProperty(thisArg, key, newDescriptor);\n    }\n  }\n\n  return value;\n}\n","import {getterCommon, validateAndExtractMethodFromDescriptor} from './common';\nimport {ResultSelectorFn} from './ResultSelectorFn';\n\n/** @internal */\nexport function decorateLegacy(target: any,\n                               key: PropertyKey,\n                               descriptor: PropertyDescriptor,\n                               setProto: boolean | undefined,\n                               makeNonConfigurable: boolean | undefined,\n                               resultSelector: ResultSelectorFn): PropertyDescriptor {\n  /* istanbul ignore if */\n  if (!descriptor) {\n    descriptor = <any>Object.getOwnPropertyDescriptor(target, key);\n    if (!descriptor) {\n      const e = new Error('@LazyGetter is unable to determine the property descriptor');\n      (<any>e).$target = target;\n      (<any>e).$key = key;\n      throw e;\n    }\n  }\n\n  const originalMethod = validateAndExtractMethodFromDescriptor(descriptor);\n\n  return Object.assign({}, descriptor, {\n    get: function (this: any): any {\n      return getterCommon(\n        target,\n        key,\n        Object.getPrototypeOf(target) === Function.prototype,\n        !!descriptor.enumerable,\n        originalMethod,\n        this,\n        arguments,\n        setProto,\n        makeNonConfigurable,\n        resultSelector\n      );\n    }\n  });\n}\n","import {getterCommon, validateAndExtractMethodFromDescriptor} from './common';\nimport {NewDescriptor} from './NewDescriptor';\nimport {ResultSelectorFn} from './ResultSelectorFn';\n\n/** @internal */\nexport function decorateNew(inp: NewDescriptor,\n                            setProto: boolean | undefined,\n                            makeNonConfigurable: boolean | undefined,\n                            resultSelector: ResultSelectorFn): NewDescriptor {\n  const out: NewDescriptor = Object.assign({}, inp);\n  if (out.descriptor) {\n    out.descriptor = Object.assign({}, out.descriptor);\n  }\n  const actualDesc: PropertyDescriptor = <any>(out.descriptor || /* istanbul ignore next */ out);\n\n  const originalMethod = validateAndExtractMethodFromDescriptor(actualDesc);\n  const isStatic = inp.placement === 'static';\n\n  actualDesc.get = function (this: any): any {\n    return getterCommon(\n      isStatic ? this : Object.getPrototypeOf(this),\n      out.key,\n      isStatic,\n      !!actualDesc.enumerable,\n      originalMethod,\n      this,\n      arguments,\n      setProto,\n      makeNonConfigurable,\n      resultSelector\n    );\n  };\n\n  return out;\n}\n","import {defaultFilter} from './common';\nimport {decorateLegacy} from './legacy';\nimport {decorateNew} from './new';\nimport {NewDescriptor} from './NewDescriptor';\nimport {ResettableDescriptor} from './ResettableDescriptor';\nimport {ResultSelectorFn} from './ResultSelectorFn';\n\ntype DecoratorReturn = PropertyDescriptor | NewDescriptor;\n\n/**\n * Evaluate the getter function and cache the result\n * @param {boolean} [setProto=false] Set the value on the class prototype as well. Only applies to non-static getters.\n * @param {boolean} [makeNonConfigurable=false] Set to true to make the resolved property non-configurable\n * @param {ResultSelectorFn} [resultSelector] A filter function that must return true for the value to cached\n * @return A decorator function\n */\nfunction LazyGetter(setProto?: boolean,\n                    makeNonConfigurable?: boolean,\n                    resultSelector: ResultSelectorFn = defaultFilter): MethodDecorator & ResettableDescriptor {\n  let desc: PropertyDescriptor;\n  let prop: PropertyKey;\n  let args: IArguments = <any>null;\n  let isLegacy: boolean;\n\n  function decorator(targetOrDesc: any, key: PropertyKey, descriptor: PropertyDescriptor): DecoratorReturn {\n    args = arguments;\n    if (key === undefined) {\n      if (typeof desc === 'undefined') {\n        isLegacy = false;\n        prop = (<NewDescriptor>targetOrDesc).key;\n        desc = Object.assign(\n          {},\n          (<NewDescriptor>targetOrDesc).descriptor || /* istanbul ignore next */ targetOrDesc\n        );\n      }\n\n      return decorateNew(targetOrDesc, setProto, makeNonConfigurable, resultSelector);\n    } else {\n      if (typeof desc === 'undefined') {\n        isLegacy = true;\n        prop = key;\n        desc = Object.assign(\n          {},\n          descriptor || /* istanbul ignore next */ Object.getOwnPropertyDescriptor(targetOrDesc, key)\n        );\n      }\n\n      return decorateLegacy(targetOrDesc, key, descriptor, setProto, makeNonConfigurable, resultSelector);\n    }\n  }\n\n  decorator.reset = setProto ? thrower : (on: any): void => {\n    if (!on) {\n      throw new Error('Unable to restore descriptor on an undefined target');\n    }\n    if (!desc) {\n      throw new Error('Unable to restore descriptor. Did you remember to apply your decorator to a method?');\n    }\n    // Restore descriptor to its original state\n    Object.defineProperty(on, prop, desc);\n    const ret: any = decorator.apply(null, <any>args);\n    Object.defineProperty(on, prop, isLegacy ? ret : (ret.descriptor || ret));\n  };\n\n  return decorator;\n}\n\nfunction thrower(): never {\n  throw new Error('This decoration modifies the class prototype and cannot be reset.');\n}\n\nexport {ResultSelectorFn, LazyGetter};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAEA;AACA,WAAgB,aAAa;MAC3B,OAAO,IAAI,CAAC;EACd,CAAC;EAED;AACA,WAAgB,sCAAsC,CAAC,IAAwB;MAC7E,IAAM,cAAc,GAAa,IAAI,CAAC,GAAG,CAAC;MAE1C,IAAI,CAAC,cAAc,EAAE;UACnB,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;OAC3D;WAAM,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;UAC7B,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;OAC5D;MAED,OAAO,cAAc,CAAC;EACxB,CAAC;EAED;AACA,WAAgB,YAAY,CAAC,MAAW;EACX,GAAgB,EAChB,QAAiB,EACjB,UAAmB,EACnB,cAAwB,EACxB,OAAY,EACZ,IAAgB,EAChB,QAA6B,EAC7B,mBAAwC,EACxC,cAAgC;MAC3D,IAAM,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,OAAO,EAAO,IAAI,CAAC,CAAC;MAEvD,IAAI,cAAc,CAAC,KAAK,CAAC,EAAE;UACzB,IAAM,aAAa,GAAuB;cACxC,YAAY,EAAE,CAAC,mBAAmB;cAClC,UAAU,YAAA;cACV,KAAK,OAAA;WACN,CAAC;UAEF,IAAI,QAAQ,IAAI,QAAQ,EAAE;cACxB,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,aAAa,CAAC,CAAC;WACnD;UAED,IAAI,CAAC,QAAQ,EAAE;cACb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,GAAG,EAAE,aAAa,CAAC,CAAC;WACpD;OACF;MAED,OAAO,KAAK,CAAC;EACf,CAAC;;EC/CD;AACA,WAAgB,cAAc,CAAC,MAAW,EACX,GAAgB,EAChB,UAA8B,EAC9B,QAA6B,EAC7B,mBAAwC,EACxC,cAAgC;;MAE7D,IAAI,CAAC,UAAU,EAAE;UACf,UAAU,GAAQ,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;UAC/D,IAAI,CAAC,UAAU,EAAE;cACf,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAC;cAC5E,CAAE,CAAC,OAAO,GAAG,MAAM,CAAC;cACpB,CAAE,CAAC,IAAI,GAAG,GAAG,CAAC;cACpB,MAAM,CAAC,CAAC;WACT;OACF;MAED,IAAM,cAAc,GAAG,sCAAsC,CAAC,UAAU,CAAC,CAAC;MAE1E,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE;UACnC,GAAG,EAAE;cACH,OAAO,YAAY,CACjB,MAAM,EACN,GAAG,EACH,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,QAAQ,CAAC,SAAS,EACpD,CAAC,CAAC,UAAU,CAAC,UAAU,EACvB,cAAc,EACd,IAAI,EACJ,SAAS,EACT,QAAQ,EACR,mBAAmB,EACnB,cAAc,CACf,CAAC;WACH;OACF,CAAC,CAAC;EACL,CAAC;;ECnCD;AACA,WAAgB,WAAW,CAAC,GAAkB,EAClB,QAA6B,EAC7B,mBAAwC,EACxC,cAAgC;MAC1D,IAAM,GAAG,GAAkB,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;MAClD,IAAI,GAAG,CAAC,UAAU,EAAE;UAClB,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;OACpD;MACD,IAAM,UAAU,IAA6B,GAAG,CAAC,UAAU,+BAA+B,GAAG,CAAC,CAAC;MAE/F,IAAM,cAAc,GAAG,sCAAsC,CAAC,UAAU,CAAC,CAAC;MAC1E,IAAM,QAAQ,GAAG,GAAG,CAAC,SAAS,KAAK,QAAQ,CAAC;MAE5C,UAAU,CAAC,GAAG,GAAG;UACf,OAAO,YAAY,CACjB,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,EAC7C,GAAG,CAAC,GAAG,EACP,QAAQ,EACR,CAAC,CAAC,UAAU,CAAC,UAAU,EACvB,cAAc,EACd,IAAI,EACJ,SAAS,EACT,QAAQ,EACR,mBAAmB,EACnB,cAAc,CACf,CAAC;OACH,CAAC;MAEF,OAAO,GAAG,CAAC;EACb,CAAC;;ECzBD;;;;;;;EAOA,SAAS,UAAU,CAAC,QAAkB,EAClB,mBAA6B,EAC7B,cAAgD;MAAhD,+BAAA,EAAA,8BAAgD;MAClE,IAAI,IAAwB,CAAC;MAC7B,IAAI,IAAiB,CAAC;MACtB,IAAI,IAAI,GAAoB,IAAI,CAAC;MACjC,IAAI,QAAiB,CAAC;MAEtB,SAAS,SAAS,CAAC,YAAiB,EAAE,GAAgB,EAAE,UAA8B;UACpF,IAAI,GAAG,SAAS,CAAC;UACjB,IAAI,GAAG,KAAK,SAAS,EAAE;cACrB,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;kBAC/B,QAAQ,GAAG,KAAK,CAAC;kBACjB,IAAI,GAAmB,YAAa,CAAC,GAAG,CAAC;kBACzC,IAAI,GAAG,MAAM,CAAC,MAAM,CAClB,EAAE,EACc,YAAa,CAAC,UAAU,+BAA+B,YAAY,CACpF,CAAC;eACH;cAED,OAAO,WAAW,CAAC,YAAY,EAAE,QAAQ,EAAE,mBAAmB,EAAE,cAAc,CAAC,CAAC;WACjF;eAAM;cACL,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;kBAC/B,QAAQ,GAAG,IAAI,CAAC;kBAChB,IAAI,GAAG,GAAG,CAAC;kBACX,IAAI,GAAG,MAAM,CAAC,MAAM,CAClB,EAAE,EACF,UAAU,+BAA+B,MAAM,CAAC,wBAAwB,CAAC,YAAY,EAAE,GAAG,CAAC,CAC5F,CAAC;eACH;cAED,OAAO,cAAc,CAAC,YAAY,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,mBAAmB,EAAE,cAAc,CAAC,CAAC;WACrG;OACF;MAED,SAAS,CAAC,KAAK,GAAG,QAAQ,GAAG,OAAO,GAAG,UAAC,EAAO;UAC7C,IAAI,CAAC,EAAE,EAAE;cACP,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;WACxE;UACD,IAAI,CAAC,IAAI,EAAE;cACT,MAAM,IAAI,KAAK,CAAC,qFAAqF,CAAC,CAAC;WACxG;;UAED,MAAM,CAAC,cAAc,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;UACtC,IAAM,GAAG,GAAQ,SAAS,CAAC,KAAK,CAAC,IAAI,EAAO,IAAI,CAAC,CAAC;UAClD,MAAM,CAAC,cAAc,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,GAAG,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,CAAC;OAC3E,CAAC;MAEF,OAAO,SAAS,CAAC;EACnB,CAAC;EAED,SAAS,OAAO;MACd,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAC;EACvF,CAAC;;;;;;;;;;;;"}