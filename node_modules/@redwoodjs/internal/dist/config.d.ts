export declare enum TargetEnum {
    NODE = "node",
    BROWSER = "browser",
    REACT_NATIVE = "react-native",
    ELECTRON = "electron"
}
export interface NodeTargetConfig {
    name?: string;
    host: string;
    port: number;
    path: string;
    target: TargetEnum.NODE;
    schemaPath: string;
}
interface BrowserTargetConfig {
    name?: string;
    host: string;
    port: number;
    path: string;
    target: TargetEnum.BROWSER;
    apiProxyPort: number;
    apiProxyPath: string;
    fastRefresh: boolean;
    a11y: boolean;
}
export interface Config {
    web: BrowserTargetConfig;
    api: NodeTargetConfig;
    browser: {
        open: boolean | string;
    };
    generate: {
        tests: boolean;
        stories: boolean;
        nestScaffoldByModel: boolean;
    };
    experimental: {
        esbuild: boolean;
    };
}
/**
 * These configuration options are modified by the user via the Redwood
 * config file.
 */
export declare const getConfig: (configPath?: string) => Config;
export {};
//# sourceMappingURL=config.d.ts.map