"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

var _interopRequireWildcard = require("@babel/runtime-corejs3/helpers/interopRequireWildcard").default;

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.useParams = exports.ParamsProvider = exports.ParamsContext = void 0;

var _react = _interopRequireWildcard(require("react"));

var _internal = require("./internal");

var _location = require("./location");

var _routerContext = require("./router-context");

const ParamsContext = (0, _internal.createNamedContext)('Params');
exports.ParamsContext = ParamsContext;

const ParamsProvider = ({
  path,
  children
}) => {
  const {
    paramTypes
  } = (0, _routerContext.useRouterState)();
  const location = (0, _location.useLocation)();
  let pathParams = {};
  const searchParams = (0, _internal.parseSearch)(location.search);

  if (path) {
    const {
      match,
      params
    } = (0, _internal.matchPath)(path, location.pathname, paramTypes);

    if (match && typeof params !== 'undefined') {
      pathParams = params;
    }
  }

  return /*#__PURE__*/_react.default.createElement(ParamsContext.Provider, {
    value: {
      params: { ...pathParams,
        ...searchParams
      }
    }
  }, children);
};

exports.ParamsProvider = ParamsProvider;

const useParams = () => {
  const paramsContext = (0, _react.useContext)(ParamsContext);

  if (paramsContext === undefined) {
    throw new Error('useParams must be used within a ParamsProvider');
  }

  return paramsContext.params;
};

exports.useParams = useParams;