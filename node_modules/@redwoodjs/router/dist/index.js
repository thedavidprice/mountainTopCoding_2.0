"use strict";

var _context, _context2, _context3;

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

var _forEachInstanceProperty = require("@babel/runtime-corejs3/core-js/instance/for-each");

var _Object$keys = require("@babel/runtime-corejs3/core-js/object/keys");

var _interopRequireWildcard = require("@babel/runtime-corejs3/helpers/interopRequireWildcard").default;

_Object$defineProperty(exports, "__esModule", {
  value: true
});

var _exportNames = {
  Router: true,
  Route: true,
  Link: true,
  NavLink: true,
  useMatch: true,
  Redirect: true,
  routes: true,
  useParams: true,
  useLocation: true,
  LocationProvider: true,
  navigate: true,
  PageLoadingContext: true,
  usePageLoadingContext: true,
  RouteAnnouncement: true,
  RouteFocus: true,
  SkipNavLink: true,
  SkipNavContent: true
};

_Object$defineProperty(exports, "Router", {
  enumerable: true,
  get: function () {
    return _internal.Router;
  }
});

_Object$defineProperty(exports, "Route", {
  enumerable: true,
  get: function () {
    return _internal.Route;
  }
});

_Object$defineProperty(exports, "Link", {
  enumerable: true,
  get: function () {
    return _internal.Link;
  }
});

_Object$defineProperty(exports, "NavLink", {
  enumerable: true,
  get: function () {
    return _internal.NavLink;
  }
});

_Object$defineProperty(exports, "useMatch", {
  enumerable: true,
  get: function () {
    return _internal.useMatch;
  }
});

_Object$defineProperty(exports, "Redirect", {
  enumerable: true,
  get: function () {
    return _internal.Redirect;
  }
});

_Object$defineProperty(exports, "routes", {
  enumerable: true,
  get: function () {
    return _internal.routes;
  }
});

_Object$defineProperty(exports, "useParams", {
  enumerable: true,
  get: function () {
    return _internal.useParams;
  }
});

_Object$defineProperty(exports, "useLocation", {
  enumerable: true,
  get: function () {
    return _internal.useLocation;
  }
});

_Object$defineProperty(exports, "LocationProvider", {
  enumerable: true,
  get: function () {
    return _internal.LocationProvider;
  }
});

_Object$defineProperty(exports, "navigate", {
  enumerable: true,
  get: function () {
    return _internal.navigate;
  }
});

_Object$defineProperty(exports, "PageLoadingContext", {
  enumerable: true,
  get: function () {
    return _internal.PageLoadingContext;
  }
});

_Object$defineProperty(exports, "usePageLoadingContext", {
  enumerable: true,
  get: function () {
    return _pageLoader.usePageLoadingContext;
  }
});

_Object$defineProperty(exports, "RouteAnnouncement", {
  enumerable: true,
  get: function () {
    return _routeAnnouncement.default;
  }
});

_Object$defineProperty(exports, "RouteFocus", {
  enumerable: true,
  get: function () {
    return _routeFocus.default;
  }
});

_Object$defineProperty(exports, "SkipNavLink", {
  enumerable: true,
  get: function () {
    return _skipNav.SkipNavLink;
  }
});

_Object$defineProperty(exports, "SkipNavContent", {
  enumerable: true,
  get: function () {
    return _skipNav.SkipNavContent;
  }
});

var _internal = require("./internal");

var _Set = require("./Set");

_forEachInstanceProperty(_context = _Object$keys(_Set)).call(_context, function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _Set[key]) return;

  _Object$defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _Set[key];
    }
  });
});

var _pageLoader = require("./page-loader");

var _routeAnnouncement = _interopRequireWildcard(require("./route-announcement"));

_forEachInstanceProperty(_context2 = _Object$keys(_routeAnnouncement)).call(_context2, function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _routeAnnouncement[key]) return;

  _Object$defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _routeAnnouncement[key];
    }
  });
});

var _routeFocus = _interopRequireWildcard(require("./route-focus"));

_forEachInstanceProperty(_context3 = _Object$keys(_routeFocus)).call(_context3, function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _routeFocus[key]) return;

  _Object$defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _routeFocus[key];
    }
  });
});

var _skipNav = require("@reach/skip-nav");