"use strict";

var _context, _context2, _context3, _context4, _context5, _context6;

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

var _forEachInstanceProperty = require("@babel/runtime-corejs3/core-js/instance/for-each");

var _Object$keys = require("@babel/runtime-corejs3/core-js/object/keys");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

require("./global.api-auto-imports");

var _apolloServerLambda = require("apollo-server-lambda");

_forEachInstanceProperty(_context = _Object$keys(_apolloServerLambda)).call(_context, function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _apolloServerLambda[key]) return;

  _Object$defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _apolloServerLambda[key];
    }
  });
});

var _makeServices = require("./makeServices");

_forEachInstanceProperty(_context2 = _Object$keys(_makeServices)).call(_context2, function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _makeServices[key]) return;

  _Object$defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _makeServices[key];
    }
  });
});

var _makeMergedSchema = require("./makeMergedSchema/makeMergedSchema");

_forEachInstanceProperty(_context3 = _Object$keys(_makeMergedSchema)).call(_context3, function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _makeMergedSchema[key]) return;

  _Object$defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _makeMergedSchema[key];
    }
  });
});

var _graphql = require("./functions/graphql");

_forEachInstanceProperty(_context4 = _Object$keys(_graphql)).call(_context4, function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _graphql[key]) return;

  _Object$defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _graphql[key];
    }
  });
});

var _globalContext = require("./globalContext");

_forEachInstanceProperty(_context5 = _Object$keys(_globalContext)).call(_context5, function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _globalContext[key]) return;

  _Object$defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _globalContext[key];
    }
  });
});

var _parseJWT = require("./parseJWT");

_forEachInstanceProperty(_context6 = _Object$keys(_parseJWT)).call(_context6, function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _parseJWT[key]) return;

  _Object$defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _parseJWT[key];
    }
  });
});