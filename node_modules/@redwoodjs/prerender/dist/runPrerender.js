"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault").default;

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.runPrerender = void 0;

var _promise = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/promise"));

var _interopRequireWildcard2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/interopRequireWildcard"));

var _fs = _interopRequireDefault(require("fs"));

var _path = _interopRequireDefault(require("path"));

var _react = _interopRequireDefault(require("react"));

var _register = _interopRequireDefault(require("@babel/register"));

var _prettier = _interopRequireDefault(require("prettier"));

var _server = _interopRequireDefault(require("react-dom/server"));

var _internal = require("@redwoodjs/internal");

var _router = require("@redwoodjs/router");

var _babelPluginRedwoodPrerenderMediaImports = _interopRequireDefault(require("./babelPlugins/babel-plugin-redwood-prerender-media-imports"));

var _internal2 = require("./internal");

const rwWebPaths = (0, _internal.getPaths)().web; // Prerender specific configuration
// extends projects web/babelConfig

(0, _register.default)({
  extends: _path.default.join(rwWebPaths.base, '.babelrc.js'),
  extensions: ['.js', '.ts', '.tsx', '.jsx'],
  plugins: [['ignore-html-and-css-imports'], // webpack/postcss handles CSS imports
  ['babel-plugin-module-resolver', {
    alias: {
      src: rwWebPaths.src
    }
  }], [_babelPluginRedwoodPrerenderMediaImports.default]],
  only: [rwWebPaths.base],
  ignore: ['node_modules'],
  cache: false
});

const runPrerender = async ({
  routerPath,
  outputHtmlPath,
  dryRun
}) => {
  (0, _internal2.registerShims)();

  const indexContent = _fs.default.readFileSync((0, _internal2.getRootHtmlPath)()).toString();

  const {
    default: App
  } = await _promise.default.resolve(`${(0, _internal.getPaths)().web.app}`).then(s => (0, _interopRequireWildcard2.default)(require(s)));

  const componentAsHtml = _server.default.renderToString( /*#__PURE__*/_react.default.createElement(_router.LocationProvider, {
    location: {
      pathname: routerPath
    }
  }, /*#__PURE__*/_react.default.createElement(App, null))); // This is set by webpack by the html plugin


  const renderOutput = indexContent.replace('<server-markup></server-markup>', componentAsHtml);

  if (dryRun) {
    console.log('::: Dry run, not writing changes :::');
    console.log(`::: ðŸš€ Prerender output for ${routerPath} ::: `);

    const prettyOutput = _prettier.default.format(renderOutput, {
      parser: 'html'
    });

    console.log(prettyOutput);
    console.log('::: --- ::: ');
    return prettyOutput;
  }

  if (outputHtmlPath) {
    // Copy default index.html to 200.html first
    // This is to prevent recursively rendering the home page
    if (outputHtmlPath === 'web/dist/index.html') {
      _fs.default.copyFileSync(outputHtmlPath, 'web/dist/200.html');
    }

    (0, _internal2.writeToDist)(outputHtmlPath, renderOutput);
  }
};

exports.runPrerender = runPrerender;