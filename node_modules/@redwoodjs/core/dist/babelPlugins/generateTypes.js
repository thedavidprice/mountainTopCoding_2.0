"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.generateTypeDef = exports.generateTypeDefIndex = void 0;

var _filter = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/instance/filter"));

var _endsWith = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/instance/ends-with"));

var _path = _interopRequireDefault(require("path"));

var _structure = require("@redwoodjs/structure");

/**
 * Searches `node_modules/@types/@redwoodjs/generated` for files ending with `.d.ts`
 * and references them in `node_modules/@types/@redwoodjs/index.d.ts`
 */
const generateTypeDefIndex = () => {
  const host = new _structure.DefaultHost();
  const indexDefFile = [];
  indexDefFile.push(`// ${new Date().toISOString()}`);

  for (const typeDefFile of (0, _filter.default)(_context = host.readdirSync(host.paths.types)).call(_context, name => (0, _endsWith.default)(name).call(name, '.d.ts'))) {
    var _context;

    indexDefFile.push(`/// <reference path="./types/${typeDefFile}" />`);
  }

  host.writeFileSync(_path.default.resolve(host.paths.types, '../index.d.ts'), indexDefFile.join('\n'));
};
/**
 * Generate a type definition
 */


exports.generateTypeDefIndex = generateTypeDefIndex;

const generateTypeDef = (filename, contents) => {
  const host = new _structure.DefaultHost();
  host.writeFileSync(_path.default.join(host.paths.types, filename), contents);
};

exports.generateTypeDef = generateTypeDef;