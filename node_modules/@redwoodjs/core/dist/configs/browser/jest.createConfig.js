"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = getBrowserJestConfig;

// used by cli `rw test` command
const path = require('path');

const {
  getPaths
} = require('@redwoodjs/internal');

function getBrowserJestConfig() {
  const redwoodPaths = getPaths();
  const NODE_MODULES_PATH = path.join(redwoodPaths.base, 'node_modules');
  return {
    displayName: {
      color: 'blueBright',
      name: 'web'
    },
    globals: {
      __REDWOOD__API_PROXY_PATH: '/'
    },
    setupFilesAfterEnv: [path.resolve(__dirname, './jest.setup.js')],
    moduleNameMapper: {
      /**
       * Make sure modules that require different versions of these
       * dependencies end up using the same one.
       */
      '^react$': path.join(NODE_MODULES_PATH, 'react'),
      '^react-dom$': path.join(NODE_MODULES_PATH, 'react-dom'),
      '^@apollo/client/react$': path.join(NODE_MODULES_PATH, '@apollo/client/react'),
      // We replace imports to "@redwoodjs/router" with our own implementation.
      '^@redwoodjs/router$': path.join(NODE_MODULES_PATH, '@redwoodjs/testing/dist/MockRouter.js'),
      '^@redwoodjs/web$': path.join(NODE_MODULES_PATH, '@redwoodjs/web'),
      '^@redwoodjs/testing$': path.join(NODE_MODULES_PATH, '@redwoodjs/testing'),
      '~__REDWOOD__USER_ROUTES_FOR_MOCK': getPaths().web.routes,

      /**
       * Mock out files that aren't particularly useful in tests. See fileMock.js for more info.
       */
      '\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga|css)$': '@redwoodjs/testing/dist/fileMock.js'
    }
  };
}