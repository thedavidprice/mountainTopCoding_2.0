"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.yargsDefaults = exports.builder = exports.description = exports.aliases = exports.command = void 0;

var _terminalLink = _interopRequireDefault(require("terminal-link"));

const command = 'generate <type>';
exports.command = command;
const aliases = ['g'];
exports.aliases = aliases;
const description = 'Save time by generating boilerplate code';
exports.description = description;

const builder = yargs => yargs
/**
 * Like generate, util is an entry point command,
 * so we can't have generate going through its subdirectories
 */
.commandDir('./generate', {
  recurse: true,
  exclude: /\/util\//
}).demandCommand().epilogue(`Also see the ${(0, _terminalLink.default)('Redwood CLI Reference', 'https://redwoodjs.com/reference/command-line-interface#generate-alias-g')}`);

exports.builder = builder;
const yargsDefaults = {
  force: {
    alias: 'f',
    default: false,
    description: 'Overwrite existing files',
    type: 'boolean'
  },
  javascript: {
    alias: 'js',
    default: true,
    description: 'Generate JavaScript files',
    type: 'boolean'
  },
  typescript: {
    alias: 'ts',
    default: false,
    description: 'Generate TypeScript files',
    type: 'boolean'
  }
};
exports.yargsDefaults = yargsDefaults;