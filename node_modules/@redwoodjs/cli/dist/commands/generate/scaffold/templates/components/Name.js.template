import { useMutation } from '@redwoodjs/web'
import { toast } from '@redwoodjs/web/toast'
import { Link, routes, navigate } from '@redwoodjs/router'

import { QUERY } from 'src/components/${pascalScaffoldPath}${pluralPascalName}Cell'

const DELETE_${singularConstantName}_MUTATION = gql`
  mutation Delete${singularPascalName}Mutation($id: ${idType}!) {
    delete${singularPascalName}(id: $id) {
      id
    }
  }
`

const jsonDisplay = (obj) => {
  return (
    <pre>
      <code>{JSON.stringify(obj, null, 2)}</code>
    </pre>
  )
}

const timeTag = (datetime) => {
  return (
    <time dateTime={datetime} title={datetime}>
      {new Date(datetime).toUTCString()}
    </time>
  )
}

const checkboxInputTag = (checked) => {
  return <input type="checkbox" checked={checked} disabled />
}

const ${singularPascalName} = ({ ${singularCamelName} }) => {
  const [delete${singularPascalName}] = useMutation(DELETE_${singularConstantName}_MUTATION, {
    onCompleted: () => {
      toast.success('${singularPascalName} deleted')
      navigate(routes.${pluralRouteName}())
    },
  })

  const onDeleteClick = (id) => {
    if (confirm('Are you sure you want to delete ${singularCamelName} ' + id + '?')) {
      delete${singularPascalName}({ variables: { id } })
    }
  }

  return (
    <>
      <div className="rw-segment">
        <header className="rw-segment-header">
          <h2 className="rw-heading rw-heading-secondary">${singularPascalName} {${singularCamelName}.id} Detail</h2>
        </header>
        <table className="rw-table">
          <tbody>
            <% columns.forEach(column => { %><tr>
              <th><%= column.label %></th><%
              if (column.displayFunction) { %>
              <td>{${column.displayFunction}(${singularCamelName}.${column.name})}</td><%
              } else { %>
              <td>{${singularCamelName}.${column.name}}</td><%
              } %>
            </tr><% }) %>
          </tbody>
        </table>
      </div>
      <nav className="rw-button-group">
        <Link
          to={routes.${editRouteName}({ id: ${singularCamelName}.id })}
          className="rw-button rw-button-blue"
        >
          Edit
        </Link>
        <a
          href="#"
          className="rw-button rw-button-red"
          onClick={() => onDeleteClick(${singularCamelName}.id)}
        >
          Delete
        </a>
      </nav>
    </>
  )
}

export default ${singularPascalName}
