import {
  Form,
  FormError,
  FieldError,
  Label,
  ${fieldsToImport.join(',\n  ')},
  Submit,
} from '@redwoodjs/forms'

const formatDatetime = (value) => {
  if (value) {
    return value.replace(/:\d{2}\.\d{3}\w/, '')
  }
}

const ${singularPascalName}Form = (props) => {
  const onSubmit = (data) => {
    props.onSave(data, props?.${singularCamelName}?.id)
  }

  return (
    <div className="rw-form-wrapper">
      <Form onSubmit={onSubmit} error={props.error}>
        <FormError
          error={props.error}
          wrapperClassName="rw-form-error-wrapper"
          titleClassName="rw-form-error-title"
          listClassName="rw-form-error-list"
        />
<% editableColumns.forEach(column => { %>
        <Label
          name="${column.name}"
          className="rw-label"
          errorClassName="rw-label rw-label-error"
        >
          ${column.label}
        </Label>
        <${column.component}
          name="${column.name}"
          ${column.defaultProp}={${column.deserilizeFunction && column.deserilizeFunction + '('}props.${singularCamelName}?.<%= column.name %>${column.deserilizeFunction && ')'}}
          className="rw-input"
          errorClassName="rw-input rw-input-error"<%= !column.validation ? '' : `
          validation=${column.validation}` %><%= !column.dataType ? '' : `
          dataType="${column.dataType}"` %>
        />
        <FieldError name="${column.name}" className="rw-field-error" />
<% }) %>
        <div className="rw-button-group">
          <Submit
            disabled={props.loading}
            className="rw-button rw-button-blue"
          >
            Save
          </Submit>
        </div>
      </Form>
    </div>
  )
}

export default ${singularPascalName}Form
